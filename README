README

MiniAda is a simple compiler for a subset of Ada written in Java using ANTLR,
targeting the SPARC architecture. This project is a work in progress, and
currently only provides a parser.

MiniAda is developed by two students at Radford University, bconniff
(github.com/bconniff) and jdominic (github.com/jdominic). All code is property
of Radford University.

COMPILATION (LINUX/UNIX)

The source comes with a Makefile which will help build the parser for you. You
should look in the Makefile and set the path to your ANTLR jar file.

To compile the parser on a UNIX-like system, use the command:

   make

MiniAda comes with test programs to print out the parse tree and AST for a
given input file. To build the test programs use:

   make debug

After compilation, you can run the tests with:

   java Test <file>
   java TestAST <file>

Where <file> is the input file for the parser. Similarly, you can use the
commands:

   make test
   make test-ast

Which will run the parser on all files with the suffix ".adb" in the "test/"
directory, and print out their parse trees.

To delete the files created by running "make", use the command:

   make clean

COMPILATION (WINDOWS)

The Makefile doesn't work on Windows, so we've also provided a build.xml file
for use with Apache's Ant build system. First, edit the build.xml file and set
the "antlr.jar" property to point to your ANTLR jar file.

The Ant build.xml provides all the options listed in the above section, which
work as expected. Just replace the "make" command with "ant".

REQUIREMENTS

MiniAda requires ANTLR version 3, and the Makefile assumes the command antlr3
is available to compile ANTLR grammars. The ANTRL jar file must also be in
Java's classpath. Since MiniAda is written in Java, it also requires a working
Java SDK.

MiniAda has been tested on Arch Linux, running ANTLR version 3.4 and OpenJDK
version 1.70.

DIFFERENCES FROM ADA

The language implemented by the MiniAda compiler is similar to Ada95, but not
identical. In the future, this section will list the specific differences.
